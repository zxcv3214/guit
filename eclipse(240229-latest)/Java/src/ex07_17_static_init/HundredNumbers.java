//초기화 블록을 포함하는 클래스의 예
/*멤버변수(필드)의 초기화 방법
1. 명시적 초기화 - 변수 선언과 동시에 초기화 하는 것 (간단하고 명료)
   예) int sum=0;			       //기본형 변수의 초기화
   	  Cricle c = new Circle();     //참조형 변수의 초기화
   	  
2. 생성자

3. 초기화 블럭 : 복잡한 초기화 작업이 필요할 때 사용한다.
	1) 인스턴스 변수 초기화 블럭 : 인스턴스 변수를 초기화 하는데 사용
		- 인스턴스 변수가 생성될 때마다 각 인스턴스별로 초기화 이루어짐.
		- 인스턴스 변수의 초기화 순서 : 기본값 -> 명시적 초기화 -> 인스턴스 초기화 블럭 -> 생성자
		- 단순히 클래스 내에 블럭{} 만들고 그 안에 코드를 작성하면 된다.
		  모든 생성자에서 공통으로 수행되어야 하는 코드를 주로 사용한다.
		  
	2) 클래스 변수 초기화 블럭 : 클래스 변수를 초기화 하는데 사용
	   클래스 변수가 처음 로딩될 때 단 한번 초기화 된다.
	   - 클래스 변수의 초기화 순서 : 기본값 -> 명시적 초기화 -> 클래스 초기화 블럭
	   - 형식) static { }
 */

package ex07_17_static_init;

public class HundredNumbers {
	static int arr[];

	HundredNumbers() {
		System.out.println("여기는 생성자 입니다.");
	}

	/*
	 * 클래스 초기화(정적 초기화) 블록
	 * 클래스가 사용되기 전에 단 한번 호출(정적필드 초기화에 주로 사용)
	 * 초기화 값을 지정하기 번거로울 때, 까다로울 때
	 */

	static {
		System.out.println("클래스 초기화 블럭");
		// 1. 100개의 크기를 갖는 1차원 배열 생성
		arr = new int[100];

		for (int cnt = 0; cnt < 100; cnt++) {
			arr[cnt] = cnt;
			System.out.print(arr[cnt] + "\t");
		}
		System.out.println();
	}

}
